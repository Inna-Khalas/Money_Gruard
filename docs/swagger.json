{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Transactions app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of transactions app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Transactions",
      "description": "Operations about transactions."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "register a new user",
        "description": "Creates a new user with email and password",
        "operationId": "registerUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "email"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "6804e75dabb924578f1b79a1"
                        },
                        "name": {
                          "type": "string",
                          "example": "test_user_1"
                        },
                        "email": {
                          "type": "string",
                          "example": "test_user_1@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_register"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "login user",
        "description": "Authenticates user and returns tokens",
        "operationId": "loginUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string"
                        },
                        "refreshToken": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "refresh tokens",
        "description": "Get new access and refresh tokens using refresh token",
        "operationId": "refreshToken",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "example": "<your_refresh_token>"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Tokens refreshed"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string"
                        },
                        "refreshToken": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "logout user",
        "description": "Logs out user and invalidates session",
        "operationId": "logoutUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Logged out"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No active session found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "No active session found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token expired or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token expired or invalid, user logged out"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to log out"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/user": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get current user info",
        "operationId": "getUser",
        "description": "Returns information about the currently authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "661f90c3be3f1c286a953129"
                    },
                    "name": {
                      "type": "string",
                      "example": "Tetiana"
                    },
                    "email": {
                      "type": "string",
                      "example": "tanya@example.com"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },

    "/auth/user/{id}": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "Update user profile with name and avatar",
        "operationId": "updateUser",
        "description": "Allows a user to update their profile information, including their name and avatar image.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Osk"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully patched a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated the user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "_id",
                        "name",
                        "email",
                        "avatar"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "6807769c2362eec8277ceacb"
                        },
                        "name": {
                          "type": "string",
                          "example": "Osk"
                        },
                        "email": {
                          "type": "string",
                          "example": "Osk@example.com"
                        },
                        "avatar": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dw3qjido8/image/upload/v1743113771/zo6dstqb..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    
    "/transactions/{id}": {
      "put": {
        "tags": [
          "Transactions"
        ],
        "summary": "Put transaction by id",
        "operationId": "putTransaction",
        "description": "Put transaction by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "643d4a5d59f1c5a35c7d91e1"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "Weekly grocery shopping"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "expense",
                      "income"
                    ],
                    "default": "income"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "Main expenses",
                      "Products",
                      "Car",
                      "Self care",
                      "Child care",
                      "Household products",
                      "Education",
                      "Leisure",
                      "Other expenses",
                      "Entertainment"
                    ]
                  },
                  "value": {
                    "type": "number",
                    "minimum": 0,
                    "example": 250.5
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-04-18T18:00:00Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Put transaction by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully put a transaction!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/transactions"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Transaction not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Transactions"
        ],
        "summary": "Delete transaction by ID",
        "description": "Deletes a transaction from the database based on the provided transaction ID.",
        "operationId": "deleteTransaction",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the transaction to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Transaction deleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid transaction ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid transaction ID"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Transaction not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to delete transaction"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create a new transaction",
        "description": "Creates a new income or expense transaction.",
        "operationId": "createTransaction",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "Weekly grocery shopping"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "expense",
                      "income"
                    ],
                    "default": "income"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "Main expenses",
                      "Products",
                      "Car",
                      "Self care",
                      "Child care",
                      "Household products",
                      "Education",
                      "Leisure",
                      "Other expenses",
                      "Entertainment"
                    ]
                  },
                  "value": {
                    "type": "number",
                    "minimum": 0,
                    "example": 250.5
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-04-18T18:00:00Z"
                  }
                },
                "required": [
                  "value",
                  "date"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transaction created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "category": {
                      "type": "string"
                    },
                    "value": {
                      "type": "number"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "owner": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/summary": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get transaction summary for a specific month",
        "description": "Get transaction summary for a specific month",
        "operationId": "getTransactionSummary",
        "parameters": [
          {
            "in": "query",
            "name": "period",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}$"
            },
            "required": true,
            "description": "Period in format YYYY-MM (e.g., 2025-04)"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Summary for the selected period",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "period": {
                      "type": "string",
                      "example": "2025-04"
                    },
                    "total": {
                      "type": "object",
                      "properties": {
                        "expense": {
                          "type": "number",
                          "example": 247.5
                        },
                        "income": {
                          "type": "number",
                          "example": 3650
                        }
                      }
                    },
                    "categories": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "expense": {
                            "type": "number",
                            "example": 80.5
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "period": "2025-04",
                  "total": {
                    "expense": 247.5,
                    "income": 3650
                  },
                  "categories": {
                    "Products": {
                      "expense": 107.5
                    },
                    "Entertainment": {
                      "expense": 60
                    },
                    "Car": {
                      "expense": 80
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or missing period format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid or missing period format (YYYY-MM)"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized – missing or invalid token"
          }
        }
      }
    },
    "/transaction/categories": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get all transaction categories",
        "description": "Returns an array of transaction categories.",
        "operationId": "getCategories",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the category (e.g., \"main expenses\", \"products\", etc.)",
                            "example": "main expenses"
                          },
                          "type": {
                            "type": "string",
                            "description": "Defines whether the category is for an expense or income",
                            "enum": [
                              "expense",
                              "income"
                            ],
                            "example": "expense"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "description": "Server error while retrieving categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to retrieve categories"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "userRegister": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "test_user_1"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "test_user_1@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "testPassword123"
          }
        }
      },
      "user": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "strongPassword123"
          }
        }
      },
      "transactions": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier for the transaction",
            "example": "643d4a5d59f1c5a35c7d91e1"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment or note about the transaction",
            "example": "Bought groceries at the store"
          },
          "owner": {
            "type": "string",
            "format": "ObjectId",
            "description": "The ID of the user who owns this transaction",
            "example": "643d4a5d59f1c5a35c7d91d5"
          },
          "type": {
            "type": "string",
            "description": "Type of the transaction — either income or expense",
            "enum": [
              "income",
              "expense"
            ],
            "example": "expense"
          },
          "category": {
            "type": "string",
            "description": "Required if the type is 'expense'; defines the spending category",
            "enum": [
              "Main expenses",
              "Products",
              "Car",
              "Self care",
              "Child care",
              "Household products",
              "Education",
              "Leisure",
              "Other expenses",
              "Entertainment"
            ],
            "example": "Products"
          },
          "value": {
            "type": "number",
            "minimum": 0,
            "description": "Transaction value",
            "example": 150.75
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Date of the transaction",
            "example": "2024-04-17T15:23:00.000Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the transaction was created",
            "example": "2024-04-17T15:23:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the transaction was last updated",
            "example": "2024-04-17T15:23:00.000Z"
          }
        },
        "required": [
          "owner",
          "type",
          "value",
          "date"
        ]
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request - Failed to create transaction",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Failed to create transaction."
                },
                "data": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Error"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token not provided"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Contact not found."
                },
                "data": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict - User already exists",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "error"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong"
                },
                "error": {
                  "type": "string",
                  "example": "Email in use"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong"
                },
                "data": {
                  "type": "string",
                  "example": "Error details"
                }
              }
            }
          }
        }
      },
      "400_register": {
        "description": "Bad Request - Registration validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong"
                },
                "data": {
                  "type": "string",
                  "example": "\"email\" is required, \"emai\" is not allowed"
                }
              }
            }
          }
        }
      }
    }
  }
}